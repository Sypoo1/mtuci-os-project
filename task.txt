ЗАДАНИЕ НА КУРСОВУЮ РАБОТУ
Разработать многозадачное приложение, выполняющее получение, сбор и вывод
системной информации в соответствии с вариантом задания (таблица 1). 
Таблица 1. Индивидуальные варианты заданий

Сервер 1:
    ширину и высоту основного монитора.
    цвет пиксела на сервере для переданных от клиента координат.

Сервер 2:
    идентификатор серверного процесса.
    количество потоков серверного процесса.

Общие указания к выполнению работы
Многозадачное приложение реализуется на основе технологии «клиент-сервер» на языке
программирования С/С++;Процессы 1 и 2
выступают как серверы приложений, третий процесс является их клиентом. Обмен
данными между клиентами и серверами осуществляется при помощи сокетов.
И клиентский, и серверные процессы оформляются как отдельные приложения,
запускаются и завершают работу независимо друг от друга. Серверы должны быть
многопоточными, то есть допускать одновременное подключение нескольких клиентов.
Серверные процессы по запросу получают системную информацию в соответствии с
вариантом задания и передают ее клиенту с указанием текущего времени (до секунд). На
стороне клиента необходимо реализовать интерфейс, позволяющий пользователю
подключиться по выбору к первому или второму серверу, к двум серверам, отключиться от
каждого сервера, а также возможность раздельного получения и отображения данных по
каждому из пунктов индивидуального задания, при выполнении дополнительных заданий
при необходимости учесть соответствующие отдельные пункты в интерфейсе.
Необходимо предусмотреть проверку на повторный запуск серверов, т.е. исключить
ситуацию, когда запускается более чем один экземпляр каждого сервера; проработать
возможность перезапуска сервера в случае его остановки.
Сервер должен поддерживать работу с несколькими клиентами одновременно (в
целях демонстрации достаточно 5). В течение всего времени подключения клиента к
серверу информация в клиентской части должна обновляться либо автоматически (повыбранному дополнительному заданию), либо по команде от пользователя.
Дополнительные задания
1. При периодическом обновлении информации по запросу от клиента (организовать
выбор режима отправки периодических запросов к серверу в рамках текущей сессии)
новые данные передается сервером в ответ только в том случае, если что-либо
изменилось с момента прошлого обновления информации для данного клиента.
2. Обновление информации на клиенте происходит по инициативе сервера как реакция
на изменения на сервере.
3. Создать отдельный сервер, который ведет лог операций (отдельный для каждого
сервера задачи, с сохранением лога в файл для каждого сервера), в котором
фиксируются все события сервера: старт и остановка сервера, подключения
клиентов, переданные запросы, ошибки и т.д. Взаимодействие между серверами
задач и сервером логирования осуществляется с помощью каналов.
4. Запуск клиентов в контейнерах (docker).
5. Наличие версии сервера или клиента для другой ОС (т.е. если клиент и сервер могут
работать под разными ОС).
7. Демонстрация работы разработанных приложений на двух устройствах (физических
или в виртуальных машинах).
8. Реализация графического интерфейса на стороне клиента.
